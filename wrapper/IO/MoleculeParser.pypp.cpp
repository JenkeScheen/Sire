// This file has been generated by Py++.

// (C) Christopher Woods, GPL >= 2 License

#include "boost/python.hpp"
#include "MoleculeParser.pypp.hpp"

namespace bp = boost::python;

#include "SireBase/parallel.h"

#include "SireBase/unittest.h"

#include "SireError/errors.h"

#include "SireMol/molecule.h"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/system.h"

#include "amber2.h"

#include <QElapsedTimer>

#include <QFile>

#include <QHash>

#include <QRegularExpression>

#include <QTextStream>

#include "amber2.h"

#include "Qt/qdatastream.hpp"

#include "Helpers/str.hpp"

void register_MoleculeParser_class(){

    { //::SireIO::MoleculeParser
        typedef bp::class_< SireIO::MoleculeParser, bp::bases< SireBase::Property >, boost::noncopyable > MoleculeParser_exposer_t;
        MoleculeParser_exposer_t MoleculeParser_exposer = MoleculeParser_exposer_t( "MoleculeParser", "The base class of all molecule parsers", bp::no_init );
        bp::scope MoleculeParser_scope( MoleculeParser_exposer );
        { //::SireIO::MoleculeParser::typeName
        
            typedef char const * ( *typeName_function_type )(  );
            typeName_function_type typeName_function_value( &::SireIO::MoleculeParser::typeName );
            
            MoleculeParser_exposer.def( 
                "typeName"
                , typeName_function_value
                , "" );
        
        }
        MoleculeParser_exposer.staticmethod( "typeName" );
        MoleculeParser_exposer.def( "__rlshift__", &__rlshift__QDataStream< ::SireIO::MoleculeParser >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() );
        MoleculeParser_exposer.def( "__rrshift__", &__rrshift__QDataStream< ::SireIO::MoleculeParser >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() );
        MoleculeParser_exposer.def( "__str__", &__str__< ::SireIO::MoleculeParser > );
        MoleculeParser_exposer.def( "__repr__", &__str__< ::SireIO::MoleculeParser > );
    }

}
